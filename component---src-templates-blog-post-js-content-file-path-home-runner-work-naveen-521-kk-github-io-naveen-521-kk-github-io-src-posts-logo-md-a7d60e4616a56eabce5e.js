"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[460],{7261:function(n,a,s){function e(n){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},e(n)}function t(n){var a=function(n,a){if("object"!==e(n)||null===n)return n;var s=n[Symbol.toPrimitive];if(void 0!==s){var t=s.call(n,a||"default");if("object"!==e(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===a?String:Number)(n)}(n,"string");return"symbol"===e(a)?a:String(a)}function p(n,a,s){return(a=t(a))in n?Object.defineProperty(n,a,{value:s,enumerable:!0,configurable:!0,writable:!0}):n[a]=s,n}s.d(a,{Zo:function(){return k},ah:function(){return r}});var o=s(7294);function c(n,a){var s=Object.keys(n);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(n);a&&(e=e.filter((function(a){return Object.getOwnPropertyDescriptor(n,a).enumerable}))),s.push.apply(s,e)}return s}function l(n){for(var a=1;a<arguments.length;a++){var s=null!=arguments[a]?arguments[a]:{};a%2?c(Object(s),!0).forEach((function(a){p(n,a,s[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(s)):c(Object(s)).forEach((function(a){Object.defineProperty(n,a,Object.getOwnPropertyDescriptor(s,a))}))}return n}var u=o.createContext({});function r(n){var a=o.useContext(u);return o.useMemo((function(){return"function"==typeof n?n(a):l(l({},a),n)}),[a,n])}var i={};function k(n){var a,s=n.components,e=n.children;return a=n.disableParentContext?"function"==typeof s?s({}):s||i:r(s),o.createElement(u.Provider,{value:a},e)}},2050:function(n,a,s){s.r(a),s.d(a,{default:function(){return d}});var e=s(7261),t=s(7294);function p(n){var a=Object.assign({p:"p",em:"em",h3:"h3",a:"a",div:"div",strong:"strong",code:"code",img:"img"},(0,e.ah)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.p,null,"I created a ",t.createElement(a.em,null,"new logo")," today, it was some Python and other things I learned while developing Manim."),"\n",t.createElement(a.h3,{id:"my-original-logo",style:{position:"relative"}},t.createElement(a.a,{href:"#my-original-logo","aria-label":"my original logo permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"My Original Logo"),"\n",t.createElement(a.p,null,"Initially, I was using a ",t.createElement(a.strong,null,"rocket")," gif (or rather a static one) as a logo for my online profiles."),"\n",t.createElement("video",{autoplay:!0,loop:!0,muted:!0,playsinline:!0},t.createElement("source",{src:"/assets/logo-post/videos/rocket.webm",type:"video/webm"}),t.createElement("source",{src:"/assets/logo-post/videos/rocket.mp4",type:"video/mp4"})),"\n",t.createElement(a.p,null,"This logo was great; I loved it (was in my profile for ~6 months), but it was time for a change I was searching for a new one or trying to create one today."),"\n",t.createElement(a.h3,{id:"the-story",style:{position:"relative"}},t.createElement(a.a,{href:"#the-story","aria-label":"the story permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"The Story"),"\n",t.createElement(a.p,null,"First, I opened ",t.createElement(a.a,{href:"https://inkscape.org/"},"Inkscape")," and had no plans about the logo, so it’s an unplanned art. I am no artist and new to Inkscape UI; I was going to each of the tools available there. Something which interested me was ",t.createElement(a.strong,null,"Pen Tools"),", which would be able to draw ",t.createElement(a.a,{href:"https://en.wikipedia.org/wiki/B%C3%A9zier_curve"},"Beizer Curve"),". I was playing with that and then that gave me an idea 💡."),"\n",t.createElement(a.p,null,"I decided that my logo is going to contain some ",t.createElement(a.a,{href:"https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Quadratic_B%C3%A9zier_curves"},"Quadratic Beizer Curve")," with the starting point as ",t.createElement(a.code,null,"(0, 0)"),"; second control point ",t.createElement(a.code,null,"(0.5, 1)"),"; and the endpoint as ",t.createElement(a.code,null,"(1, 0)"),". Similarly, there would be a curve around all the other sides. I tried to do that Inkscape and I didn’t get any success 😢."),"\n",t.createElement(a.p,null,"Annoyed with Inkscape, I thought it would be better to create things programmatically. I wanted some tool that could give me an SVG and an API that is easy to understand. I have previously used ",t.createElement(a.a,{href:"https://pycairo.readthedocs.io"},"PyCairo (Python Bindings for Cairo Graphics Library)")," for ",t.createElement(a.a,{href:"https://manim.community"},"Manim")," and understand its API a bit; I decided to use it."),"\n",t.createElement(a.p,null,"I started to write a script that will create the SVG. So, I started with creating a ",t.createElement(a.a,{href:"https://pycairo.readthedocs.io/en/latest/reference/surfaces.html"},t.createElement(a.code,null,"cairo.Surface"))," and a ",t.createElement(a.a,{href:"https://pycairo.readthedocs.io/en/latest/reference/context.html"},t.createElement(a.code,null,"cairo.Context"))," from that. I decided to get a 500x500 SVG file."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py"><span class="token keyword">import</span> cairo\n\nwidth<span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span>\n<span class="token keyword">with</span> cairo<span class="token punctuation">.</span>SVGSurface<span class="token punctuation">(</span><span class="token string">"logo.svg"</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span> <span class="token keyword">as</span> surface<span class="token punctuation">:</span>\n    context <span class="token operator">=</span> cairo<span class="token punctuation">.</span>Context<span class="token punctuation">(</span>surface<span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_line_width<span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"I have scaled the ",t.createElement(a.code,null,"context")," so I can use units within ",t.createElement(a.code,null,"(0,1)")," rather than absolute size. Also, I have set the line width to ",t.createElement(a.code,null,"0.01")," (a random value from ",t.createElement(a.em,null,"trial and error"),")."),"\n",t.createElement(a.p,null,"Now, to draw a Bezier curve as I previously mentioned, I had to use ",t.createElement(a.a,{href:"https://pycairo.readthedocs.io/en/latest/reference/context.html#cairo.Context.curve_to"},t.createElement(a.code,null,"Context.curve_to"))," method."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">context<span class="token punctuation">.</span>curve_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># (0, 0), (0.5, 1), (1, 0)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Then I set the colour I wanted, for now, I just choose Black(",t.createElement(a.code,null,"#000000"),")."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"and then finally use ",t.createElement(a.a,{href:"https://pycairo.readthedocs.io/en/latest/reference/context.html#cairo.Context.stroke"},t.createElement(a.code,null,"Context.stroke"))," to draw the curve onto the surface."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"This whole code now becomes"),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py"><span class="token keyword">import</span> cairo\n\nwidth<span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span>\n<span class="token keyword">with</span> cairo<span class="token punctuation">.</span>SVGSurface<span class="token punctuation">(</span><span class="token string">"logo.svg"</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span> <span class="token keyword">as</span> surface<span class="token punctuation">:</span>\n    context <span class="token operator">=</span> cairo<span class="token punctuation">.</span>Context<span class="token punctuation">(</span>surface<span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_line_width<span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>curve_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># (0, 0), (0.5, 1), (1, 0)</span>\n    context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"which gave me an SVG like"),"\n",t.createElement(a.p,null,t.createElement(a.img,{src:"/assets/logo-post/beizer-curve.svg",alt:"beizer curve cairo"})),"\n",t.createElement(a.p,null,"Next, it’s about drawing a similar Beizer Curve from the other sides of the Image. So, I started by drawing a curve ",t.createElement(a.code,null,"(0, 1)"),", ",t.createElement(a.code,null,"(0.5, 0)"),", ",t.createElement(a.code,null,"(1, 1)"),", which when translated to Python would be"),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">    context<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>curve_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,t.createElement(a.img,{src:"/assets/logo-post/beizer-curve-1.svg",alt:"two beizer curve cairo"})),"\n",t.createElement(a.p,null,"And then another two curve ",t.createElement(a.code,null,"(0, 0)"),", ",t.createElement(a.code,null,"(1, 0.5)"),", ",t.createElement(a.code,null,"(0, 1)"),"."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">    context<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>curve_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,t.createElement(a.img,{src:"/assets/logo-post/beizer-curve-2.svg",alt:"three beizer curve cairo"})),"\n",t.createElement(a.p,null,"and another one ",t.createElement(a.code,null,"(1, 0)"),", ",t.createElement(a.code,null,"(0, 0.5)"),", ",t.createElement(a.code,null,"(1, 1)"),"."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">    context<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>curve_to<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,t.createElement(a.img,{src:"/assets/logo-post/beizer-curve-3.svg",alt:"four beizer curve cairo"})),"\n",t.createElement(a.p,null,"The logo is getting its shape. Now, I draw two lines from each corner using ",t.createElement(a.a,{href:"https://pycairo.readthedocs.io/en/latest/reference/context.html#cairo.Context.line_to"},t.createElement(a.code,null,"Context.line_to()")),". But this time with a different colour RGBA ",t.createElement(a.code,null,".5, .3, 6, 1")," (Just a random one 😉)."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">    context<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>line_to<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">,</span> <span class="token number">.3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    context<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>line_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">,</span> <span class="token number">.3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,t.createElement(a.img,{src:"/assets/logo-post/beizer-curve-line.svg",alt:"four beizer curve two line cairo"})),"\n",t.createElement(a.p,null,"Now, the logo has come in a good shape, and I want more Beizer curves so, I decided to draw another four. These curves had the same colour as that of the line and are exactly half of the previously drawn one."),"\n",t.createElement(a.p,null,"First, I draw a curve with the coordinates ",t.createElement(a.code,null,"(0, 0,)"),", ",t.createElement(a.code,null,"(0.5, 0.5)"),", ",t.createElement(a.code,null,"(0, 1)"),"."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">    context<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>curve_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">,</span> <span class="token number">.3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,t.createElement(a.img,{src:"/assets/logo-post/beizer-curve-line-1.svg",alt:"five beizer curve two line cairo"})),"\n",t.createElement(a.p,null,"Then one with ",t.createElement(a.code,null,"(1, 1)"),", ",t.createElement(a.code,null,"(0.5, 0.5)"),", ",t.createElement(a.code,null,"(1, 0)")),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">    context<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>curve_to<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">,</span> <span class="token number">.3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,t.createElement(a.img,{src:"/assets/logo-post/beizer-curve-line-2.svg",alt:"six beizer curve two line cairo"})),"\n",t.createElement(a.p,null,"Next with ",t.createElement(a.code,null,"(0, 0)"),", ",t.createElement(a.code,null,"(0.5, 0.5)"),", ",t.createElement(a.code,null,"(1, 0)")),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">    context<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>curve_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">,</span> <span class="token number">.3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,t.createElement(a.img,{src:"/assets/logo-post/beizer-curve-line-3.svg",alt:"seven beizer curves two line cairo"})),"\n",t.createElement(a.p,null,"and, finally another one ",t.createElement(a.code,null,"(0, 1)"),", ",t.createElement(a.code,null,"(0.5, 0.5)"),", ",t.createElement(a.code,null,"(1, 1)")," 🎉."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">    context<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>curve_to<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>set_source_rgba<span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">,</span> <span class="token number">.3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>stroke<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,t.createElement(a.img,{src:"/assets/logo-post/beizer-curve-line-4.svg",alt:"eight beizer curves two line cairo"})),"\n",t.createElement(a.p,null,"This got the base of my Logo. Now it’s time to pick the colours. I wanted the first four curves to have a separate colour 🦄."),"\n",t.createElement(a.p,null,"So, I went to ",t.createElement(a.a,{href:"http://colormind.io/"},"http://colormind.io/")," (a ",t.createElement(a.em,null,"random")," website which I got from a Google Search). Selected the colour",t.createElement(a.code,null," #5FA172")," as the colour for outer Beizer Curves and the Line and ",t.createElement(a.code,null,"#2F3954")," as the colour for the inner Curves. I spend at least half an hour selecting them 🤦‍♂️."),"\n",t.createElement(a.p,null,"Finally, I edited the script which I got so that I can change the colours by just changing two variables ",t.createElement(a.code,null,"outer_color")," and ",t.createElement(a.code,null,"inner_color"),"."),"\n",t.createElement(a.p,null,"And, here is the final result."),"\n",t.createElement(a.p,null,t.createElement(a.img,{src:"/assets/logo-post/final-logo.svg",alt:"Naveen naveen521kk logo"})),"\n",t.createElement(a.p,null,"You could have seen that already I had been using it around in this site and the final script is over ",t.createElement(a.a,{href:"https://github.com/naveen521kk/naveen521kk.github.io/blob/3a5e5abde14ba95c65ebd13d38f9ffe06ae57d76/logo/logo.py"},"here"),"."),"\n",t.createElement(a.h3,{id:"creating-favicon",style:{position:"relative"}},t.createElement(a.a,{href:"#creating-favicon","aria-label":"creating favicon permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Creating Favicon"),"\n",t.createElement(a.p,null,"After creating the new logo, I wanted to change the favicon of this site. I didn’t want to upload it anywhere and I want to programmatically generate those Favicons. Doing a random search got me to this ",t.createElement(a.a,{href:"https://nedbatchelder.com/blog/202012/favicons_with_imagemagick.html"},"article")," and use ",t.createElement(a.a,{href:"https://wiki.gnome.org/Projects/LibRsvg/"},"librsvg")," for converting a ",t.createElement(a.code,null,".svg")," which I generated previously to ",t.createElement(a.code,null,".png"),". So, I install both ",t.createElement(a.a,{href:"https://packages.msys2.org/package/mingw-w64-x86_64-librsvg?repo=mingw64"},"librsvg"),"  (",t.createElement(a.code,null,"rsvg-convert.exe"),") and ",t.createElement(a.a,{href:"https://packages.msys2.org/package/mingw-w64-x86_64-imagemagick?repo=mingw64"},"imagemagick")," from ",t.createElement(a.a,{href:"https://msys2.org"},"MSYS2"),"."),"\n",t.createElement(a.p,null,"What I did first was to create 6 png file with various size from the SVG using ",t.createElement(a.code,null,"rsvg-convert")," tool. Each png was of different size."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell"><span class="token function">cp</span> logo.svg temp-logo.svg\nrsvg-convert temp-logo.svg  <span class="token parameter variable">-w</span> <span class="token number">16</span> <span class="token parameter variable">-h</span> <span class="token number">16</span> <span class="token parameter variable">--output</span> temp-16.png\nrsvg-convert temp-logo.svg <span class="token parameter variable">-w</span> <span class="token number">32</span> <span class="token parameter variable">-h</span> <span class="token number">32</span> <span class="token parameter variable">--output</span> temp-32.png\nrsvg-convert temp-logo.svg <span class="token parameter variable">-w</span> <span class="token number">48</span> <span class="token parameter variable">-h</span> <span class="token number">48</span> <span class="token parameter variable">--output</span> temp-48.png\nrsvg-convert temp-logo.svg <span class="token parameter variable">-w</span> <span class="token number">64</span> <span class="token parameter variable">-h</span> <span class="token number">64</span> <span class="token parameter variable">--output</span> temp-64.png\nrsvg-convert temp-logo.svg <span class="token parameter variable">-w</span> <span class="token number">96</span>  <span class="token parameter variable">-h</span> <span class="token number">96</span> <span class="token parameter variable">--output</span> temp-96.png\nrsvg-convert temp-logo.svg <span class="token parameter variable">-w</span> <span class="token number">256</span> <span class="token parameter variable">-h</span> <span class="token number">256</span> <span class="token parameter variable">--output</span> temp-256.png</code></pre></div>'}}),"\n",t.createElement(a.p,null,"And then, used ImageMagick to convert them to favicon."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">convert temp-16.png temp-32.png temp-48.png temp-64.png temp-96.png temp-256.png +dither <span class="token parameter variable">-colors</span> <span class="token number">255</span> <span class="token string">"favicon.ico"</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Finally, I deleted the previous generated ",t.createElement(a.code,null,"temp-*")," files."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell"><span class="token function">rm</span> temp-*.png temp-*.svg</code></pre></div>'}}),"\n",t.createElement(a.p,null,"You can get the whole shell script from ",t.createElement(a.a,{href:"https://github.com/naveen521kk/naveen521kk.github.io/blob/main/logo/build-favicon.sh"},"here"),". I ran it under MSYS2 on my Windows machine."),"\n",t.createElement(a.h3,{id:"creating-the-logo-with-manim",style:{position:"relative"}},t.createElement(a.a,{href:"#creating-the-logo-with-manim","aria-label":"creating the logo with manim permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Creating the logo with Manim"),"\n",t.createElement(a.p,null,"Update 5 November 2021: someone from Discord called ",t.createElement(a.code,null,"ad_chaos#5354")," recreated the same with Manim. See ",t.createElement(a.a,{href:"https://discord.com/channels/581738731934056449/780234936980078602/906063960082636830"},"here"),". Thanks ❤️."),"\n",t.createElement(a.p,null,"Here’s the code to create it:"),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py"><span class="token keyword">class</span> <span class="token class-name">SyrusDarkLogo</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n        <span class="token comment"># colours and constants</span>\n        green <span class="token operator">=</span> <span class="token string">"#5FA172"</span>\n        blue <span class="token operator">=</span> <span class="token string">"#2F3954"</span>\n        radii <span class="token operator">=</span> <span class="token number">1.45</span>\n        x_center <span class="token operator">=</span> <span class="token number">2.05</span>\n\n        <span class="token comment"># config</span>\n        self<span class="token punctuation">.</span>camera<span class="token punctuation">.</span>background_color <span class="token operator">=</span> WHITE\n\n        <span class="token comment"># arcs</span>\n        p1 <span class="token operator">=</span> Arc<span class="token punctuation">(</span>\n            angle<span class="token operator">=</span><span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>arctan<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>x_center <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token operator">=</span>radii\n        <span class="token punctuation">)</span><span class="token punctuation">.</span>move_arc_center_to<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span>x_center<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        p1<span class="token punctuation">.</span>rotate<span class="token punctuation">(</span><span class="token operator">-</span>np<span class="token punctuation">.</span>arctan<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>x_center <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> about_point<span class="token operator">=</span>p1<span class="token punctuation">.</span>get_arc_center<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        pn <span class="token operator">=</span> VGroup<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        pn<span class="token punctuation">.</span>add<span class="token punctuation">(</span>\n            <span class="token operator">*</span><span class="token punctuation">[</span>\n                p1<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rotate<span class="token punctuation">(</span>n <span class="token operator">*</span> PI <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> about_point<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            p1\n        <span class="token punctuation">)</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>green<span class="token punctuation">)</span>\n\n        <span class="token comment"># lines</span>\n        ln <span class="token operator">=</span> VGroup<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        ln<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Line<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Line<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>\n            green\n        <span class="token punctuation">)</span>\n\n        <span class="token comment"># parabolas</span>\n        curve <span class="token operator">=</span> ParametricFunction<span class="token punctuation">(</span>\n            <span class="token keyword">lambda</span> v<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>v<span class="token punctuation">,</span> <span class="token number">0.9</span> <span class="token operator">*</span> v <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t_range<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token punctuation">)</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>blue<span class="token punctuation">)</span>\n        curves <span class="token operator">=</span> VGroup<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        curves<span class="token punctuation">.</span>add<span class="token punctuation">(</span>\n            <span class="token operator">*</span><span class="token punctuation">[</span>\n                curve<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rotate<span class="token punctuation">(</span>n <span class="token operator">*</span> PI <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> about_point<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">)</span>\n\n        <span class="token comment"># final assembly</span>\n        avatar <span class="token operator">=</span> VGroup<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        avatar<span class="token punctuation">.</span>add<span class="token punctuation">(</span>pn<span class="token punctuation">,</span> ln<span class="token punctuation">,</span> curves<span class="token punctuation">)</span>\n        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>avatar<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"It is also available ",t.createElement(a.a,{href:"https://github.com/naveen521kk/naveen521kk.github.io/blob/main/logo/logo-manim.py"},"here"),"."),"\n",t.createElement(a.h3,{id:"aftermath",style:{position:"relative"}},t.createElement(a.a,{href:"#aftermath","aria-label":"aftermath permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Aftermath"),"\n",t.createElement(a.p,null,"Then I opened Inkscape to get a white background on that logo. I could use Cairo but well…"),"\n",t.createElement(a.p,null,"Finally, uploaded my new logo to Discord, Github and Gravatar. Though this didn’t fit perfectly in a circle I could edit them slightly to make things work."),"\n",t.createElement(a.p,null,"If you’ve read and followed the post this far, THANK YOU! 😃"))}var o=function(n){void 0===n&&(n={});var a=Object.assign({},(0,e.ah)(),n.components).wrapper;return a?t.createElement(a,n,t.createElement(p,n)):p(n)},c=s(3771),l=s(7682),u=s(4165),r=s(9255),i=s(4497),k=function(n){return t.createElement("code",{className:"language-text"},n.children)},m=function(n){var a=n.data,s=(n.location,n.children),p=a.mdx.frontmatter,o={"@context":"https://schema.org","@type":"BlogPosting",headline:p.title,author:{"@type":"Person",name:"Naveen M K",url:"http://www.naveenmk.me",image:"https://avatars.githubusercontent.com/u/49693820"},name:p.title,abstract:p.description,image:p.image,description:p.description,copyrightYear:(new Date).getFullYear(),copyrightHolder:"Naveen M K"},m={code:k};return t.createElement("div",null,t.createElement(c.Z,{title:p.title,description:p.description,image:p.image,article:!0}),t.createElement(l.h,{data:o}),t.createElement(u.Z),t.createElement("article",{className:"blog-post",itemScope:!0,itemType:"http://schema.org/Article"},p.image?t.createElement(r.Z,{img_loc:p.image}):t.createElement("div"),t.createElement("div",{className:i.F},t.createElement("div",{className:i.T+" blog-post"},t.createElement("header",null,t.createElement("h1",{className:"py-2",itemProp:"headline"},p.title),t.createElement("small",null,"Published on ",p.date,p.updated_date?" · Updated on "+p.updated_date:"")),t.createElement("section",{className:"flex flex-col blog-post-content pt-3 mx-auto justify-center",id:"blog-start",itemProp:"articleBody"},t.createElement(e.Zo,{components:m},s))))))};function d(n){return t.createElement(m,n,t.createElement(o,n))}},9255:function(n,a,s){s.d(a,{Z:function(){return c}});var e=s(7294),t="bgphoto-module--base_container--3f935",p="bgphoto-module--inner_container--2454f",o="bgphoto-module--top_container--83622";function c(n){var a={backgroundImage:"url("+n.img_loc+")"};return e.createElement("div",{className:t+" "+o},e.createElement("div",{className:t+" "+p,style:a}))}},7682:function(n,a,s){s.d(a,{h:function(){return t}});var e=s(7294),t=function(n){var a=n.data;return e.createElement("script",{type:"application/ld+json",dangerouslySetInnerHTML:{__html:JSON.stringify(a)}})}},4497:function(n,a,s){s.d(a,{F:function(){return t},T:function(){return e}});var e="posts-style-module--core_blog_post--f38d0",t="posts-style-module--outer_class--bc1ef"}}]);
//# sourceMappingURL=component---src-templates-blog-post-js-content-file-path-home-runner-work-naveen-521-kk-github-io-naveen-521-kk-github-io-src-posts-logo-md-a7d60e4616a56eabce5e.js.map