{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-src-posts-palindrome-md-867e85d4cd08a8994487.js","mappings":"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","sources":["webpack://site/./src/posts/palindrome.md","webpack://site/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h2: \"h2\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Given a number, write a algorithm, flowchart, pseudocode to check if it is palindrome or not.\"), \"\\n\", React.createElement(_components.p, null, \"A string is said to be palindrome if reverse of the string is same as string. For example, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">1221</code>\"\n    }\n  }), \" is palindrome, but \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">1223</code>\"\n    }\n  }), \" is not palindrome.\"), \"\\n\", React.createElement(_components.p, null, \"We will follow a method where we get each numbers using mathematical operations.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"logic\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#logic\",\n    \"aria-label\": \"logic permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Logic\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Get the number to check and store it in \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n</code>\"\n    }\n  }), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Create empty variables \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">r = 0</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">s = 0</code>\"\n    }\n  }), \" and\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">t = n</code>\"\n    }\n  }), \". Here, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">s</code>\"\n    }\n  }), \" will become the reversed number, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">t</code>\"\n    }\n  }), \" will be a reference to original number, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">r</code>\"\n    }\n  }), \" will be a temporary variable.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Start a while loop checking whether the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n != 0</code>\"\n    }\n  }), \"(if n is 0 exit the while loop).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Inside the while loop do the following operations.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\">r <span class=\\\"token operator\\\">=</span> n <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">10</span>\\ns <span class=\\\"token operator\\\">=</span> s <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token operator\\\">+</span> r\\nn <span class=\\\"token operator\\\">=</span> n <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">10</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"First get the last digit of \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n</code>\"\n    }\n  }), \" by dividing the given number(\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n</code>\"\n    }\n  }), \") by 10 and finding the remainder(the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">%</code>\"\n    }\n  }), \" operator) and store it in \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">r</code>\"\n    }\n  }), \". Then, add \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">r</code>\"\n    }\n  }), \" to \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">s</code>\"\n    }\n  }), \" after multiplying it by previous stored value of \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">s</code>\"\n    }\n  }), \" by 10. And finally divide \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n</code>\"\n    }\n  }), \" by 10 and store it again in \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n</code>\"\n    }\n  }), \". This way the number is reversed and stored in \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">s</code>\"\n    }\n  }), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"After the loop ends, check whether \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">s == t</code>\"\n    }\n  }), \"(whether the original number is same as reversed number).\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"If \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">s == t</code>\"\n    }\n  }), \", display that \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n</code>\"\n    }\n  }), \" palindrome, else display \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">n</code>\"\n    }\n  }), \" is not a palindrome.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"flowchart\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#flowchart\",\n    \"aria-label\": \"flowchart permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Flowchart\"), \"\\n\", React.createElement(_components.p, null, \"WIP, have a look \", React.createElement(_components.a, {\n    href: \"https://mermaid-js.github.io/mermaid-live-editor/view/#eyJjb2RlIjoiZ3JhcGggVERcbiAgICBBKChTdGFydCkpIC0tPiBCWy9SZWFkIE51bWJlciB0byBjaGVjayBhcyBuL107XG4gICAgQiAtLT4gQ1tBc3NpZ24gcz0wLCB0ID0gbl07XG4gICAgQyAtLT4gRHsgV2hpbGUgbiE9MCB9OyBcbiAgICBEIC0tIFRydWUgLS0-IEVbXCJyID0gbiAlIDEwIDxicj5zID0gcyAqIDEwICsgcjxicj5uID0gbiAvIDEwXCJdIC0tPiBEXG4gICAgRCAtLSBGYWxzZSAtLT4gRntJcyBuID09IHQ_fVxuICAgIEYgLS0gWWVzIC0tPiBHWy9QcmludCBuIGlzIHBhbGluZHJvbWUvXSAtLT4gSVtTdG9wXTtcbiAgICBGIC0tIE5vIC0tPiBIWy9QcmludCBuIGlzIG5vdCBhIHBhbGluZHJvbWUvXSAtLT4gSSgoU3RvcCkpOyIsIm1lcm1haWQiOiJ7XG4gIFwidGhlbWVcIjogXCJkYXJrXCJcbn0iLCJ1cGRhdGVFZGl0b3IiOnRydWUsImF1dG9TeW5jIjp0cnVlLCJ1cGRhdGVEaWFncmFtIjp0cnVlfQ\"\n  }, \"here\"), \".\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">graph <span class=\\\"token constant\\\">TD</span>\\n    <span class=\\\"token constant\\\">A</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>Start<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> <span class=\\\"token constant\\\">B</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">Read Number to check as n</span><span class=\\\"token regex-delimiter\\\">/</span></span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token constant\\\">B</span> <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> <span class=\\\"token constant\\\">C</span><span class=\\\"token punctuation\\\">[</span>Assign s<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> t <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token constant\\\">C</span> <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> <span class=\\\"token constant\\\">D</span><span class=\\\"token punctuation\\\">{</span> While n<span class=\\\"token operator\\\">!=</span><span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span> \\n    <span class=\\\"token constant\\\">D</span> <span class=\\\"token operator\\\">--</span> True <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> <span class=\\\"token constant\\\">E</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"r = n % 10 &lt;br>s = s * 10 + r&lt;br>n = n / 10\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> <span class=\\\"token constant\\\">D</span>\\n    <span class=\\\"token constant\\\">D</span> <span class=\\\"token operator\\\">--</span> False <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> <span class=\\\"token constant\\\">F</span><span class=\\\"token punctuation\\\">{</span>Is n <span class=\\\"token operator\\\">==</span> t<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token constant\\\">F</span> <span class=\\\"token operator\\\">--</span> Yes <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> <span class=\\\"token constant\\\">G</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">Print n is palindrome</span><span class=\\\"token regex-delimiter\\\">/</span></span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> <span class=\\\"token constant\\\">I</span><span class=\\\"token punctuation\\\">[</span>Stop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token constant\\\">F</span> <span class=\\\"token operator\\\">--</span> No <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> <span class=\\\"token constant\\\">H</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token regex\\\"><span class=\\\"token regex-delimiter\\\">/</span><span class=\\\"token regex-source language-regex\\\">Print n is not a palindrome</span><span class=\\\"token regex-delimiter\\\">/</span></span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> <span class=\\\"token constant\\\">I</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>Stop<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"pseudocode\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#pseudocode\",\n    \"aria-label\": \"pseudocode permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Pseudocode\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"pseudocode\\\"><pre class=\\\"language-pseudocode\\\"><code class=\\\"language-pseudocode\\\">BEGIN\\nREAD number to check as n\\nSET s = 0\\nSET t = n\\nWHILE n != 0 DO\\n\\tr = n % 10\\n\\ts = s * 10 + r\\n\\tn = n / 10\\nENDWHILE\\nIF n == t\\n\\tDISPLAY n is palindrome\\nELSE\\n\\tDISPLAY n is not a palindrome\\nENDIF\\nEND</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"implementation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#implementation\",\n    \"aria-label\": \"implementation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Implementation\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In C:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">include</span> <span class=\\\"token string\\\">&lt;stdio.h></span></span>\\n\\n<span class=\\\"token comment\\\">/* Function to check if n is Palindrome*/</span>\\n<span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">is_palindrome</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> n<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">int</span> s <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">int</span> t <span class=\\\"token operator\\\">=</span> n<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">int</span> r <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span>n <span class=\\\"token operator\\\">!=</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        r <span class=\\\"token operator\\\">=</span> n <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">;</span>\\n        s <span class=\\\"token operator\\\">=</span> s <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token operator\\\">+</span> r<span class=\\\"token punctuation\\\">;</span>\\n        n <span class=\\\"token operator\\\">=</span> n <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\">// Check if rev_n and n are same or not.</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>s <span class=\\\"token operator\\\">==</span> t<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">else</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">int</span> tocheck <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1221</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">int</span> op <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">is_palindrome</span><span class=\\\"token punctuation\\\">(</span>to_check<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>op <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%d is a palindrome\\\"</span><span class=\\\"token punctuation\\\">,</span> tocheck<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">else</span>\\n        <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%d is not a palindrome\\\"</span><span class=\\\"token punctuation\\\">,</span> tocheck<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"In Python:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">is_palindrome</span><span class=\\\"token punctuation\\\">(</span>n<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span> <span class=\\\"token builtin\\\">bool</span><span class=\\\"token punctuation\\\">:</span>\\n    s <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n    t <span class=\\\"token operator\\\">=</span> n\\n    r <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n    <span class=\\\"token keyword\\\">while</span> n <span class=\\\"token operator\\\">!=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">:</span>\\n        r <span class=\\\"token operator\\\">=</span> n <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">10</span>\\n        s <span class=\\\"token operator\\\">=</span> s <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token operator\\\">+</span> r\\n        n <span class=\\\"token operator\\\">=</span> n <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">10</span>\\n    <span class=\\\"token keyword\\\">if</span> t <span class=\\\"token operator\\\">==</span> s<span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">True</span>\\n   \\t<span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">False</span>\\nnumber <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1001</span>\\npalim <span class=\\\"token operator\\\">=</span> is_palindrom<span class=\\\"token punctuation\\\">(</span>number<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">if</span> palim<span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>number<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\"> is a palindrom\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>number<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\"> is not a palindrom\\\"</span></span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/naveen521kk.github.io/naveen521kk.github.io/src/posts/palindrome.md\";\nimport * as React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport SEO from \"../components/seo\";\nimport {JsonLd} from \"../components/json_ld\";\nimport NavBar from \"../components/header.tsx\";\nimport BgPhoto from \"../components/bgphoto.jsx\";\nimport ScrollProgressBar from \"../components/scroll-progress-bar\";\nimport GiscusComment from \"../components/giscus\";\nimport * as styles from \"../styles/posts-style.module.scss\";\nimport \"../styles/posts.scss\";\nconst BlogPostTemplate = ({data, location, children}) => {\n  const {mdx} = data;\n  const {frontmatter} = mdx;\n  const {tags} = frontmatter;\n  const json_ld_data = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BlogPosting\",\n    headline: frontmatter.title,\n    author: {\n      \"@type\": \"Person\",\n      name: \"Naveen M K\",\n      url: \"http://www.naveenmk.me\",\n      image: \"https://avatars.githubusercontent.com/u/49693820\"\n    },\n    name: frontmatter.title,\n    abstract: frontmatter.description,\n    image: frontmatter.image,\n    description: frontmatter.description,\n    copyrightYear: new Date().getFullYear(),\n    copyrightHolder: \"Naveen M K\"\n  };\n  return React.createElement(\"div\", null, React.createElement(SEO, {\n    title: frontmatter.title,\n    description: frontmatter.description,\n    image: frontmatter.image,\n    article: true\n  }), React.createElement(JsonLd, {\n    data: json_ld_data\n  }), React.createElement(NavBar), React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, frontmatter.image ? React.createElement(BgPhoto, {\n    img_loc: frontmatter.image\n  }) : React.createElement(\"div\"), React.createElement(\"div\", {\n    className: styles.outer_class\n  }, React.createElement(\"div\", {\n    className: styles.core_blog_post + \" blog-post\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    className: \"py-2\",\n    itemProp: \"headline\"\n  }, frontmatter.title), React.createElement(\"small\", null, \"Published on \", frontmatter.date, frontmatter.updated_date ? \" · Updated on \" + frontmatter.updated_date : \"\"), React.createElement(\"div\", {\n    className: styles.tagSection\n  }, tags.map(tag => React.createElement(Link, {\n    to: `/tags/${tag}`,\n    key: tag\n  }, React.createElement(\"span\", {\n    key: tag,\n    className: styles.tag\n  }, tag))))), React.createElement(\"section\", {\n    className: \"flex flex-col blog-post-content pt-3 mx-auto justify-center\",\n    id: \"blog-start\",\n    itemProp: \"articleBody\"\n  }, children)))), React.createElement(\"div\", {\n    className: styles.outer_class + \" \" + styles.giscusComment\n  }, React.createElement(GiscusComment)), React.createElement(ScrollProgressBar));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n    query ($id: String!) {\n        mdx(id: {eq: $id}) {\n            frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                updated_date(formatString: \"MMMM DD, YYYY\")\n                slug\n                title\n                description\n                image\n                tags\n            }\n        }\n    }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h2","a","ol","li","_provideComponents","components","React","dangerouslySetInnerHTML","__html","id","style","position","href","className","wrapper","MDXLayout","BlogPostTemplate","_ref","data","location","children","mdx","frontmatter","tags","json_ld_data","headline","title","author","name","url","image","abstract","description","copyrightYear","Date","getFullYear","copyrightHolder","SEO","article","JsonLd","NavBar","itemScope","itemType","BgPhoto","img_loc","styles","itemProp","date","updated_date","map","tag","Link","to","key","GiscusComment","ScrollProgressBar","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}